[{"path":"https://burgerga.github.io/shinyTime/dev/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing","title":"Contributing","text":"much welcome contributions improve extend functionality package. Feel free report issues, ask questions, create pull requests!","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 shinyTime authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gerhard Burger. Author, maintainer. Nick Youngblut. Author.","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Burger G, Youngblut N (2024). shinyTime: Time Input Widget Shiny. R package version 1.0.3.9000,  https://github.com/burgerga/shinyTime, https://burgerga.github.io/shinyTime/.","code":"@Manual{,   title = {shinyTime: A Time Input Widget for Shiny},   author = {Gerhard Burger and Nick Youngblut},   year = {2024},   note = {R package version 1.0.3.9000,  https://github.com/burgerga/shinyTime},   url = {https://burgerga.github.io/shinyTime/}, }"},{"path":[]},{"path":"https://burgerga.github.io/shinyTime/dev/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"A Time Input Widget for Shiny","text":"shinyTime provides timeInput widget Shiny. widget allows intuitive time input hh:mm:ss hh:mm (24-hour) format using separate numeric input time component. Setting getting time R done date-time objects.","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Time Input Widget for Shiny","text":"","code":"# Install from CRAN install.packages(\"shinyTime\")"},{"path":"https://burgerga.github.io/shinyTime/dev/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"A Time Input Widget for Shiny","text":"shinyTime package mimics existing shiny functionality, using package easy: Note setting initial value can done date-time (way setting date dateInput can done Date object), also hms::hms object character string hh:mm:ss format. value retrieved date-time object (POSIXlt). need convert character able show time, default character representation include time. example: demo, visit online example app try shinyTime::shinyTimeExample() function.","code":"ui <- fluidPage(   # Using the default time 00:00:00   timeInput(\"time1\", \"Time:\"),    # Set to current time   timeInput(\"time2\", \"Time:\", value = Sys.time()),    # Set to custom time    timeInput(\"time3\", \"Time:\", value = strptime(\"12:34:56\", \"%T\")),     # Set to custom time using hms   timeInput(\"time4\", \"Time:\", value = hms::as_hms(\"23:45:07\")),    # Set to custom time using character string   timeInput(\"time5\", \"Time:\", value = \"21:32:43\"),    # Use hh:mm format   timeInput(\"time6\", \"Time:\", seconds = FALSE),    # Use multiples of 5 minutes   timeInput(\"time7\", \"Time:\", minute.steps = 5) ) server <- function(input, output) {   # Print the time in hh:mm:ss everytime it changes   observe(print(strftime(input$time1, \"%T\")))      # Print the time in hh:mm everytime it changes   observe(print(strftime(input$time4, \"%R\"))) }"},{"path":"https://burgerga.github.io/shinyTime/dev/reference/dateToTimeList.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a time object to a list — dateToTimeList","title":"Convert a time object to a list — dateToTimeList","text":"Convert time object list","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/dateToTimeList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a time object to a list — dateToTimeList","text":"","code":"dateToTimeList(value)"},{"path":"https://burgerga.github.io/shinyTime/dev/reference/dateToTimeList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a time object to a list — dateToTimeList","text":"value time object","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/dateToTimeList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a time object to a list — dateToTimeList","text":"list hour, minute second components","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/dropNulls.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop NULL values from vector/lists — dropNulls","title":"Drop NULL values from vector/lists — dropNulls","text":"Drop NULL values vector/lists","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/dropNulls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop NULL values from vector/lists — dropNulls","text":"","code":"dropNulls(x)"},{"path":"https://burgerga.github.io/shinyTime/dev/reference/dropNulls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop NULL values from vector/lists — dropNulls","text":"x vector list","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/dropNulls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop NULL values from vector/lists — dropNulls","text":"vector list NULL items removed","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/getDefaultTime.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the default time — getDefaultTime","title":"Get the default time — getDefaultTime","text":"Get default time","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/getDefaultTime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the default time — getDefaultTime","text":"","code":"getDefaultTime()"},{"path":"https://burgerga.github.io/shinyTime/dev/reference/getDefaultTime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the default time — getDefaultTime","text":"time object value \"00:00:00\"","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/is.wholenumber.html","id":null,"dir":"Reference","previous_headings":"","what":"Round a time object to the nearest minute From ?is.integer — is.wholenumber","title":"Round a time object to the nearest minute From ?is.integer — is.wholenumber","text":"Round time object nearest minute ?.integer","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/is.wholenumber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round a time object to the nearest minute From ?is.integer — is.wholenumber","text":"","code":"is.wholenumber(x, tol = .Machine$double.eps^0.5)"},{"path":"https://burgerga.github.io/shinyTime/dev/reference/is.wholenumber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round a time object to the nearest minute From ?is.integer — is.wholenumber","text":"x time object tol tolerance rounding","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/is.wholenumber.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Round a time object to the nearest minute From ?is.integer — is.wholenumber","text":"time object rounded nearest minute","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/roundTime.html","id":null,"dir":"Reference","previous_headings":"","what":"Round a time object to the nearest minute — roundTime","title":"Round a time object to the nearest minute — roundTime","text":"Round time object nearest minute","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/roundTime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round a time object to the nearest minute — roundTime","text":"","code":"roundTime(time, minutes)"},{"path":"https://burgerga.github.io/shinyTime/dev/reference/roundTime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round a time object to the nearest minute — roundTime","text":"time time object minutes number minutes round ","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/roundTime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Round a time object to the nearest minute — roundTime","text":"time object rounded nearest minute","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/shinyInputLabel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a label tag for a given input — shinyInputLabel","title":"Create a label tag for a given input — shinyInputLabel","text":"Create label tag given input","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/shinyInputLabel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a label tag for a given input — shinyInputLabel","text":"","code":"shinyInputLabel(inputId, label = NULL)"},{"path":"https://burgerga.github.io/shinyTime/dev/reference/shinyInputLabel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a label tag for a given input — shinyInputLabel","text":"inputId `input` slot label label text","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/shinyInputLabel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a label tag for a given input — shinyInputLabel","text":"label tag","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/shinyTime-package.html","id":null,"dir":"Reference","previous_headings":"","what":"shinyTime: A Time Input Widget for Shiny — shinyTime-package","title":"shinyTime: A Time Input Widget for Shiny — shinyTime-package","text":"Provides time input widget Shiny. widget allows intuitive time input '[hh]:[mm]:[ss]' '[hh]:[mm]' (24H 12H) format using separate numeric input time component. interface R uses date-time objects. See project page information examples.","code":""},{"path":[]},{"path":"https://burgerga.github.io/shinyTime/dev/reference/shinyTime-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"shinyTime: A Time Input Widget for Shiny — shinyTime-package","text":"Maintainer: Gerhard Burger burger.ga@gmail.com (ORCID) Authors: Nick Youngblut (ORCID)","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/shinyTimeDebug.html","id":null,"dir":"Reference","previous_headings":"","what":"Show the shinyTime debug app — shinyTimeDebug","title":"Show the shinyTime debug app — shinyTimeDebug","text":"App test input variety options","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/shinyTimeDebug.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show the shinyTime debug app — shinyTimeDebug","text":"","code":"shinyTimeDebug()"},{"path":"https://burgerga.github.io/shinyTime/dev/reference/shinyTimeExample.html","id":null,"dir":"Reference","previous_headings":"","what":"Show the shinyTime example app — shinyTimeExample","title":"Show the shinyTime example app — shinyTimeExample","text":"Run simple shiny app demonstrating shinyTime functionality.","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/shinyTimeExample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show the shinyTime example app — shinyTimeExample","text":"","code":"shinyTimeExample()"},{"path":[]},{"path":"https://burgerga.github.io/shinyTime/dev/reference/timeInput.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a time input — timeInput","title":"Create a time input — timeInput","text":"Creates time widget consists separate numeric inputs hours, minutes, seconds. input output values time widget instances DateTimeClasses, can converted character strings strptime strftime. Additionally, input can specified character string `hh:mm:ss` format hms class. simple example app see shinyTimeExample.","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/timeInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a time input — timeInput","text":"","code":"timeInput(   inputId,   label,   value = NULL,   seconds = TRUE,   minute.steps = NULL,   use.civilian = FALSE,   width = NULL )"},{"path":"https://burgerga.github.io/shinyTime/dev/reference/timeInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a time input — timeInput","text":"inputId input slot used access value. label Display label control, NULL label. value desired time value. Must instance DateTimeClasses. seconds Show input seconds. Defaults TRUE. minute.steps Round time multiples minute.steps (whole number). NULL sets seconds FALSE. use.civilian Use civilian time (12-hour format) instead 24-hour format. width width input, e.g. '400px', '100%'; see validateCssUnit().","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/timeInput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a time input — timeInput","text":"Returns POSIXlt object, can converted POSIXct object .POSIXct efficient storage.","code":""},{"path":[]},{"path":"https://burgerga.github.io/shinyTime/dev/reference/timeInput.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a time input — timeInput","text":"","code":"## Only run examples in interactive R sessions if (interactive()) {  ui <- fluidPage(   # Default value is 00:00:00   timeInput(\"time1\", \"Time:\"),    # Set to current time   timeInput(\"time2\", \"Time:\", value = Sys.time()),    # Set to custom time   timeInput(\"time3\", \"Time:\", value = strptime(\"12:34:56\", \"%T\")),    # Set to custom time using hms   timeInput(\"time4\", \"Time:\", value = hms::as_hms(\"23:45:07\")),    # Set to custom time using character string   timeInput(\"time5\", \"Time:\", value = \"21:32:43\"),    # Use hh:mm format   timeInput(\"time6\", \"Time:\", seconds = FALSE),    # Use multiples of 5 minutes   timeInput(\"time7\", \"Time:\", minute.steps = 5),    # Use civilian (non-military time)   timeInput(\"time8\", \"Time:\", use.civilian = TRUE) )  shinyApp(ui, server = function(input, output) { }) }"},{"path":"https://burgerga.github.io/shinyTime/dev/reference/timeListToDate.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list to a time object — timeListToDate","title":"Convert a list to a time object — timeListToDate","text":"Convert list time object","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/timeListToDate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list to a time object — timeListToDate","text":"","code":"timeListToDate(value)"},{"path":"https://burgerga.github.io/shinyTime/dev/reference/timeListToDate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list to a time object — timeListToDate","text":"value list hour, minute second components","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/timeListToDate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list to a time object — timeListToDate","text":"time object","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/timeStringToDate.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a string to a time object — timeStringToDate","title":"Convert a string to a time object — timeStringToDate","text":"Convert string time object","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/timeStringToDate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a string to a time object — timeStringToDate","text":"","code":"timeStringToDate(string)"},{"path":"https://burgerga.github.io/shinyTime/dev/reference/timeStringToDate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a string to a time object — timeStringToDate","text":"string string time format \"HH:MM:SS\"","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/timeStringToDate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a string to a time object — timeStringToDate","text":"time object","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/updateTimeInput.html","id":null,"dir":"Reference","previous_headings":"","what":"Change a time input on the client — updateTimeInput","title":"Change a time input on the client — updateTimeInput","text":"Change label /value time input","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/updateTimeInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change a time input on the client — updateTimeInput","text":"","code":"updateTimeInput(session, inputId, label = NULL, value = NULL)"},{"path":"https://burgerga.github.io/shinyTime/dev/reference/updateTimeInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change a time input on the client — updateTimeInput","text":"session session object passed function given shinyServer. Default getDefaultReactiveDomain(). inputId id input object. label label set input object. value desired time value. Must instance DateTimeClasses.","code":""},{"path":[]},{"path":"https://burgerga.github.io/shinyTime/dev/reference/updateTimeInput.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change a time input on the client — updateTimeInput","text":"","code":"## Only run examples in interactive R sessions if (interactive()) {  ui <- fluidPage(   timeInput(\"time\", \"Time:\"),   actionButton(\"to_current_time\", \"Current time\") )  server <- function(input, output, session) {   observeEvent(input$to_current_time, {     updateTimeInput(session, \"time\", value = Sys.time())   }) }  shinyApp(ui, server) }"},{"path":[]},{"path":"https://burgerga.github.io/shinyTime/dev/news/index.html","id":"shinytime-103","dir":"Changelog","previous_headings":"","what":"shinyTime 1.0.3","title":"shinyTime 1.0.3","text":"CRAN release: 2022-08-19","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/news/index.html","id":"minor-changes-1-0-3","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"shinyTime 1.0.3","text":"Add support hms::hms character input values (#18)","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/news/index.html","id":"shinytime-102","dir":"Changelog","previous_headings":"","what":"shinyTime 1.0.2","title":"shinyTime 1.0.2","text":"CRAN release: 2022-08-11","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/news/index.html","id":"minor-changes-1-0-2","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"shinyTime 1.0.2","text":"Add information timeInput return type (#14)","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/news/index.html","id":"bug-fixes-1-0-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"shinyTime 1.0.2","text":"Replaced outdated shiny utils label functions (#16) Added correct timezone handling roundTime function (#11)","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/news/index.html","id":"shinytime-101","dir":"Changelog","previous_headings":"","what":"shinyTime 1.0.1","title":"shinyTime 1.0.1","text":"CRAN release: 2019-08-06","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/news/index.html","id":"bug-fixes-1-0-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"shinyTime 1.0.1","text":"Removed use ES6 caused shinyTime fail older browsers (#8)","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/news/index.html","id":"shinytime-100","dir":"Changelog","previous_headings":"","what":"shinyTime 1.0.0","title":"shinyTime 1.0.0","text":"CRAN release: 2019-05-28","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/news/index.html","id":"major-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"shinyTime 1.0.0","text":"Input time minutes rounded nearest user-specified multiple","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/news/index.html","id":"shinytime-021","dir":"Changelog","previous_headings":"","what":"shinyTime 0.2.1","title":"shinyTime 0.2.1","text":"CRAN release: 2016-10-07","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/news/index.html","id":"minor-changes-0-2-1","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"shinyTime 0.2.1","text":"Updated style match shiny inputs Added input validation time returned always valid time (invalid values set 0)","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/news/index.html","id":"shinytime-020","dir":"Changelog","previous_headings":"","what":"shinyTime 0.2.0","title":"shinyTime 0.2.0","text":"CRAN release: 2016-07-20","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/news/index.html","id":"minor-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"shinyTime 0.2.0","text":"Added support input %H:%M format (without seconds)","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/news/index.html","id":"bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"shinyTime 0.2.0","text":"Fixed padding problem keyboard input Keyboard input now properly causes change events","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/news/index.html","id":"shinytime-010","dir":"Changelog","previous_headings":"","what":"shinyTime 0.1.0","title":"shinyTime 0.1.0","text":"CRAN release: 2016-07-18 Initial release","code":""}]
