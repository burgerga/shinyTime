[{"path":"https://burgerga.github.io/shinyTime/dev/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing","title":"Contributing","text":"much welcome contributions improve extend functionality package. Feel free report issues, ask questions, create pull requests!","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gerhard Burger. Author, maintainer.","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Burger G (2022). shinyTime: Time Input Widget Shiny. https://burgerga.github.io/shinyTime/, https://github.com/burgerga/shinyTime.","code":"@Manual{,   title = {shinyTime: A Time Input Widget for Shiny},   author = {Gerhard Burger},   year = {2022},   note = {https://burgerga.github.io/shinyTime/, https://github.com/burgerga/shinyTime}, }"},{"path":[]},{"path":"https://burgerga.github.io/shinyTime/dev/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"A Time Input Widget for Shiny","text":"shinyTime provides timeInput widget Shiny. widget allows intuitive time input [hh]:[mm]:[ss] [hh]:[mm] (24H) format using separate numeric input time component. Setting getting time R done date-time objects.","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Time Input Widget for Shiny","text":"","code":"# Install from CRAN install.packages(\"shinyTime\")"},{"path":"https://burgerga.github.io/shinyTime/dev/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"A Time Input Widget for Shiny","text":"shinyTime package mimics existing shiny functionality, using package easy: Note setting initial value done date-time object, way setting date dateInput can done Date object. value retrieved also date-time object. need convert character able show time, default character representation include time. example: demo, visit online example app try shinyTime::shinyTimeExample() function.","code":"ui <- fluidPage(   # Using the default time 00:00:00   timeInput(\"time1\", \"Time:\"),    # Set to current time   timeInput(\"time2\", \"Time:\", value = Sys.time()),    # Set to custom time    timeInput(\"time3\", \"Time:\", value = strptime(\"12:34:56\", \"%T\")),      # Use %H:%M format   timeInput(\"time4\", \"Time:\", seconds = FALSE)      # Use multiples of 5 minutes   timeInput(\"time5\", \"Time:\", minute.steps = 5) ) server <- function(input, output) {   # Print the time in [hh]:[mm]:[ss] everytime it changes   observe(print(strftime(input$time1, \"%T\")))      # Print the time in [hh]:[mm] everytime it changes   observe(print(strftime(input$time4, \"%R\"))) }"},{"path":"https://burgerga.github.io/shinyTime/dev/reference/shinyTime-package.html","id":null,"dir":"Reference","previous_headings":"","what":"shinyTime: A Time Input Widget for Shiny — shinyTime-package","title":"shinyTime: A Time Input Widget for Shiny — shinyTime-package","text":"Provides time input widget Shiny. widget allows intuitive time input '[hh]:[mm]:[ss]' '[hh]:[mm]' (24H) format using separate numeric input time component. interface R uses date-time objects. See project page information examples.","code":""},{"path":[]},{"path":"https://burgerga.github.io/shinyTime/dev/reference/shinyTime-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"shinyTime: A Time Input Widget for Shiny — shinyTime-package","text":"Maintainer: Gerhard Burger burger.ga@gmail.com (ORCID)","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/shinyTimeExample.html","id":null,"dir":"Reference","previous_headings":"","what":"Show the shinyTime example app — shinyTimeExample","title":"Show the shinyTime example app — shinyTimeExample","text":"Run simple shiny app demonstrating shinyTime functionality.","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/shinyTimeExample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show the shinyTime example app — shinyTimeExample","text":"","code":"shinyTimeExample()"},{"path":[]},{"path":"https://burgerga.github.io/shinyTime/dev/reference/timeInput.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a time input — timeInput","title":"Create a time input — timeInput","text":"Creates time widget consists separate numeric inputs hours, minutes, seconds. input output values time widget instances DateTimeClasses, can converted character strings strptime strftime. simple example app see shinyTimeExample.","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/timeInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a time input — timeInput","text":"","code":"timeInput(inputId, label, value = NULL, seconds = TRUE, minute.steps = NULL)"},{"path":"https://burgerga.github.io/shinyTime/dev/reference/timeInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a time input — timeInput","text":"inputId input slot used access value. label Display label control, NULL label. value desired time value. Must instance DateTimeClasses. seconds Show input seconds. Defaults TRUE. minute.steps Round time multiples minute.steps (whole number). NULL sets seconds FALSE.","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/timeInput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a time input — timeInput","text":"Returns POSIXlt object, can converted POSIXct object .POSIXct efficient storage.","code":""},{"path":[]},{"path":"https://burgerga.github.io/shinyTime/dev/reference/timeInput.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a time input — timeInput","text":"","code":"## Only run examples in interactive R sessions if (interactive()) {  ui <- fluidPage(   # Default value is 00:00:00   timeInput(\"time1\", \"Time:\"),    # Set to current time   timeInput(\"time2\", \"Time:\", value = Sys.time()),    # Set to custom time   timeInput(\"time3\", \"Time:\", value = strptime(\"12:34:56\", \"%T\")),    # Use %H:%M format   timeInput(\"time4\", \"Time:\", seconds = FALSE),    # Use multiples of 5 minutes   timeInput(\"time5\", \"Time:\", minute.steps = 5) )  shinyApp(ui, server = function(input, output) { }) }"},{"path":"https://burgerga.github.io/shinyTime/dev/reference/updateTimeInput.html","id":null,"dir":"Reference","previous_headings":"","what":"Change a time input on the client — updateTimeInput","title":"Change a time input on the client — updateTimeInput","text":"Change label /value time input","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/reference/updateTimeInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change a time input on the client — updateTimeInput","text":"","code":"updateTimeInput(session, inputId, label = NULL, value = NULL)"},{"path":"https://burgerga.github.io/shinyTime/dev/reference/updateTimeInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change a time input on the client — updateTimeInput","text":"session session object passed function given shinyServer. Default getDefaultReactiveDomain(). inputId id input object. label label set input object. value desired time value. Must instance DateTimeClasses.","code":""},{"path":[]},{"path":"https://burgerga.github.io/shinyTime/dev/reference/updateTimeInput.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change a time input on the client — updateTimeInput","text":"","code":"## Only run examples in interactive R sessions if (interactive()) {  ui <- fluidPage(   timeInput(\"time\", \"Time:\"),   actionButton(\"to_current_time\", \"Current time\") )  server <- function(input, output, session) {   observeEvent(input$to_current_time, {     updateTimeInput(session, \"time\", value = Sys.time())   }) }  shinyApp(ui, server) }"},{"path":"https://burgerga.github.io/shinyTime/dev/news/index.html","id":"shinytime-1019000","dir":"Changelog","previous_headings":"","what":"shinyTime 1.0.1.9000","title":"shinyTime 1.0.1.9000","text":"Replaced outdated shiny utils label functions (#16) Added correct timezone handling roundTime function (#11) Add information timeInput return type (#14)","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/news/index.html","id":"shinytime-101","dir":"Changelog","previous_headings":"","what":"shinyTime 1.0.1","title":"shinyTime 1.0.1","text":"CRAN release: 2019-08-06","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/news/index.html","id":"bug-fixes-1-0-1","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"shinyTime 1.0.1","text":"Removed use ES6 caused shinyTime fail older browsers (#8)","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/news/index.html","id":"shinytime-100","dir":"Changelog","previous_headings":"","what":"shinyTime 1.0.0","title":"shinyTime 1.0.0","text":"CRAN release: 2019-05-28","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/news/index.html","id":"major-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"shinyTime 1.0.0","text":"Input time minutes rounded nearest user-specified multiple","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/news/index.html","id":"shinytime-021","dir":"Changelog","previous_headings":"","what":"shinyTime 0.2.1","title":"shinyTime 0.2.1","text":"CRAN release: 2016-10-07","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/news/index.html","id":"minor-changes-0-2-1","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"shinyTime 0.2.1","text":"Updated style match shiny inputs Added input validation time returned always valid time (invalid values set 0)","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/news/index.html","id":"shinytime-020","dir":"Changelog","previous_headings":"","what":"shinyTime 0.2.0","title":"shinyTime 0.2.0","text":"CRAN release: 2016-07-20","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/news/index.html","id":"minor-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"shinyTime 0.2.0","text":"Added support input %H:%M format (without seconds)","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/news/index.html","id":"bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"shinyTime 0.2.0","text":"Fixed padding problem keyboard input Keyboard input now properly causes change events","code":""},{"path":"https://burgerga.github.io/shinyTime/dev/news/index.html","id":"shinytime-010","dir":"Changelog","previous_headings":"","what":"shinyTime 0.1.0","title":"shinyTime 0.1.0","text":"CRAN release: 2016-07-18 Initial release","code":""}]
